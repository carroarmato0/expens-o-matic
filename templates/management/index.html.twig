{% extends 'base.html.twig' %}

{% block title %}expens-o-matic Management{% endblock %}

{% block javascripts %}
  {{ parent() }}
  <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.bundle.min.js"></script>
  <script>
    var ctx = document.getElementById('statsChart').getContext('2d');
    var myChart = new Chart(ctx, {
      type: 'bar',
      data: {
          labels: [
              'Jan',
              'Feb',
              'Mar',
              'Apr',
              'May',
              'Jun',
              'Jul',
              'Aug',
              'Sep',
              'Oct',
              'Nov',
              'Dec'
          ],
          datasets: [
            {
              label: 'Approved',
              data: [
              {%- for month in 1..12 -%}
                {%- if approved_expenses_stats[month] is defined -%}
                {{ approved_expenses_stats[month] }},
                {%- else -%}
                0,
                {%- endif -%}
              {%- endfor -%}
              ],
              backgroundColor: '#2ecc71',
              borderWidth: 1
            },
            {
              label: 'Pending',
              data: [
              {%- for month in 1..12 -%}
                {%- if pending_expenses_stats[month] is defined -%}
                {{ pending_expenses_stats[month] }},
                {%- else -%}
                0,
                {%- endif -%}
              {%- endfor -%}
              ],
              backgroundColor: '#3498db',
              borderWidth: 1
            },
          ]
        },
        options: {
          responsive: true,
          scales: {
            yAxes: [{
              ticks: {
                min: 0,
                beginAtZero: true,
              },
              scaleLabel: {
                display: true,
                labelString: "Amount",
              },
              stacked: true,
            }],
            xAxes: [{
              stacked: true,
            }],
          },
          legend: {
            display: false,
          },
          tooltips: {
            mode: 'label',
            callbacks: {
                afterTitle: function() {
                  window.total = 0;
                },
                label: function(tooltipItem, data) {
                  let expenseState = data.datasets[tooltipItem.datasetIndex].label;
                  let value = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];
                  window.total += value;
                  return expenseState + ": " + value.toString().replace(/\B(?=(\d{3})+(?!\d))/g, " ");
                },
                footer: function() {
                  return "Total: " + window.total.toString().replace(/\B(?=(\d{3})+(?!\d))/g, " ");
                }
            }
          }
        }
    });
  </script>
{% endblock %}

{% block body %}

<div class="container-fluid col-xl-8 p-4">

  <div id="stats" class="row">
    <canvas id="statsChart" width="400" height="100"></canvas>
  </div>

  <div id="expenses_pending" class="row">
    <h3 class="mb-3">Pending Expenses</h3>
    {% if pending_expenses is empty %}
    <div class="container-fluid alert alert-secondary">
      <p class="mb-0">There are no pending expenses</p>
    </div>
    {% else %}
    <div class="list-group container-fluid">
      {% for expense in pending_expenses %}
        <a href="/expense/{{ expense.id }}" class="list-group-item list-group-item-action flex-column align-items-start">
          <div class="d-flex w-100 justify-content-between">
            <h5 class="mb-1">{{ expense.name }}</h5>
            <small>â‚¬ {{ expense.amount | number_format(2) }}</small>
          </div>
          <p>{{ expense.userId.surname }} {{ expense.userId.name }}</p>
          <p class="mb-1">{{ expense.date | date("Y-m-d") }}</p>
          {% if expense.reimbursed == 1 %}
            <span class="badge badge-success">Paid</span>
          {% else %}
            {% if expense.approved is empty %}
              <span class="badge badge-info">Pending</span>
            {% elseif expense.approved == 1 %}
              <span class="badge badge-success">Approved</span>
            {% else %}
              <span class="badge badge-danger">Rejected</span>
            {% endif %}
          {% endif %}
        </a>
      {% endfor %}
    </div>

    {% endif %}
  </div>

</div>

{% endblock %}